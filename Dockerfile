FROM node:18.16.0

ARG APP_PORT
ARG APP_NAME
ARG APP_VERSION
ARG API_PREFIX
ARG DATABASE_TYPE
ARG DATABASE_HOST
ARG DATABASE_PORT
ARG DATABASE_USERNAME
ARG DATABASE_PASSWORD
ARG DATABASE_NAME
ARG DATABASE_SCHEMA
ARG DATABASE_SYNCHRONIZE
ARG DATABASE_MAX_CONNECTIONS
ARG DATABASE_SSL_ENABLED
ARG DATABASE_REJECT_UNAUTHORIZED
ARG AWS_SQS_ESAJ_DOCUMENT_SCRAPPERS_NAME
ARG AWS_SQS_ESAJ_DOCUMENT_SCRAPPERS_URL

ENV APP_PORT=${APP_PORT}
ENV APP_NAME=${APP_NAME}
ENV APP_VERSION=${APP_VERSION}
ENV API_PREFIX=${API_PREFIX}
ENV DATABASE_TYPE=${DATABASE_TYPE}
ENV DATABASE_HOST=${DATABASE_HOST}
ENV DATABASE_PORT=${DATABASE_PORT}
ENV DATABASE_USERNAME=${DATABASE_USERNAME}
ENV DATABASE_PASSWORD=${DATABASE_PASSWORD}
ENV DATABASE_NAME=${DATABASE_NAME}
ENV DATABASE_SCHEMA=${DATABASE_SCHEMA}
ENV DATABASE_SYNCHRONIZE=${DATABASE_SYNCHRONIZE}
ENV DATABASE_MAX_CONNECTIONS=${DATABASE_MAX_CONNECTIONS}
ENV DATABASE_SSL_ENABLED=${DATABASE_SSL_ENABLED}
ENV DATABASE_REJECT_UNAUTHORIZED=${DATABASE_REJECT_UNAUTHORIZED}
ENV JWT_SECRET=${JWT_SECRET}
ENV OPEN_CAGE_DATA=${OPEN_CAGE_DATA}

RUN npm i -g @nestjs/cli typescript ts-node

COPY package*.json tmp/app/
RUN cd tmp/app && npm install

COPY . /usr/src/app
RUN cp -a /tmp/app/node_modules /usr/src/app

COPY ./startup.ci.sh /opt/startup.ci.sh
RUN chmod +x /opt/startup.ci.sh

RUN sed -i 's/\r//g' /opt/startup.ci.sh

WORKDIR /usr/src/app

RUN if [ ! -f .env ]; then echo '' > .env; fi

RUN npm run format
RUN npm run build

CMD ["/opt/startup.ci.sh"]